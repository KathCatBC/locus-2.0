<!-- notes/file_upload_form.handlebars -->

<!-- since only student should create a field note should only need loggedinstudent nav bar -->
{{> nav/loggedinstudent}}

<h2>Upload a Photo or Document</h2>
  <form class="create-update-form" action="/notes/create/{{this.projectid}}/{{this.studentid}}" method="POST">

  <div class="row">
    <div class="form-group">
      <label for="inputNote" class="col-md-2 control-label align-right">Enter Data</label>
      <div class="col-md-8">  
        <input type="note" class="form-control" id="note" name="doclink" placeholder="Enter Data">
      </div>
    </div>
  </div>

  <br><br>

  <div class="row">
    <div class="col-md-8 col-md-offset-2">
      <div class="form-group">
        <input type="file" id="file-input">
    <!--p id="status">Please select a file</p-->
        <img style="border:1px solid gray;width:300px;"  id="preview" src="/images/placeholder.png">
        <input type="hidden" id="avatar-url" name="avatar-url" value="/images/placeholder.png">
      </div>
    </div>
  </div>

  <div class="form-group">
    <div class="row">
      <label for="inpuNoteType" class="col-md-2 control-label align-right">Data Type: </label>
      <div class="col-lg-8">
        <input type="radio"  name="doctype" value="picture"> Image
        <input type="radio"  name="doctype" value="file"> Document
      </div>
    </div>
  </div>

  <div class="row">
    <div class="form-group">
      <label for="inputTitle" class="col-md-2 control-label align-right">Title</label>
      <div class="col-lg-8">
        <input type="title" class="form-control" id="title" name="title" placeholder="Enter Title">
      </div>
    </div>
  </div>

  <div class="row">
    <div class="form-group">
      <label for="inputDesc" class="col-md-2 control-label align-right">Description</label>
      <div class="col-lg-8">
        <input type="description" class="form-control" id="description" name="description" placeholder="Enter Description">
      </div>
    </div>
  </div>

  <div class="row">
    <div class="form-group">
      <label for="inputnotedate" class="col-md-2 control-label align-right">Enter Date</label>
      <div class="col-lg-8">
        <input type="notedate" class="form-control" id="notedate"  name="notedate" placeholder="Enter Date in the format MM-DD-YYYY">
      </div>
    </div>
  </div>

  <input type="hidden" class="form-control" id="notedate"  name="ProjectId" value="{{this.projectid}}">
  <input type="hidden" class="form-control" id="notedate"  name="StudentId" value="{{this.studentid}}">
  <div class="row col-md-2 control-label align-right">
    <button type="submit" class="btn btn-default">Submit</button>
  </div>
</form>

<script>

    /*
      Function to carry out the actual PUT request to S3 using the signed request from the app.
    */
    function uploadFile(file, signedRequest, url){
      debugger
      const xhr = new XMLHttpRequest();
      xhr.open('PUT', signedRequest);
      xhr.onreadystatechange = () => {
        if(xhr.readyState === 4){
          if(xhr.status === 200){
            document.getElementById('preview').src = url;
            document.getElementById('avatar-url').value = url;
            document.getElementById('note').value = url;
            console.log("url = " + url)
          }
          else{
            alert('Could not upload file.');
          }
        }
      };
      xhr.send(file);
    }

    /*
      Function to get the temporary signed request from the app.
      If request successful, continue to upload the file using this signed
      request.
    */
    function getSignedRequest(file){
      debugger
      const xhr = new XMLHttpRequest();
      xhr.open("GET", "/notes/sign-s3?file-name=${file.name}&file-type=${file.type}");
      xhr.onreadystatechange = () => {
        console.log("ready state - " + xhr.readyState)
        if(xhr.readyState === 4){
          console.log("xhr status - " + xhr.status)
          if(xhr.status === 200){
            console.log("response text - " + xhr.responseText)
            const response = JSON.parse(xhr.responseText);
            uploadFile(file, response.signedRequest, response.url);
          }
          else{
            alert('Could not get signed URL.');
          }
        }
      };
      
      // error is in the xhr.send() withcredentials : false
    
      xhr.send();
    }
    

    /*
     Function called when file input updated. If there is a file selected, then
     start upload procedure by asking for a signed request from the app.
    */
    function initUpload(){
      debugger
      const files = document.getElementById('file-input').files;
      const file = files[0];
      if(file == null){
        return alert('No file selected.');
      }
      getSignedRequest(file);
    }

    /*
     Bind listeners when the page loads.
    */
    (() => {
        document.getElementById('file-input').onchange = initUpload;
    })();

    <{{!}}/script>


